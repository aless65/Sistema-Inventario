// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaInventario.Infrastructure.Inventario_AJM;

#nullable disable

namespace AcademiaFS.Proyecto.Inventario.Migrations
{
    [DbContext(typeof(InventarioAjmContext))]
    [Migration("20231229211117_AuditoriaSalidasInventarioDetalles")]
    partial class AuditoriaSalidasInventarioDetalles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioModificacion")
                        .HasColumnType("int");

                    b.Property<string>("Identidad")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdEmpleado")
                        .HasName("PK_Empleados_IdEmpleado");

                    b.HasIndex("IdUsuarioCreacion");

                    b.HasIndex("IdUsuarioModificacion");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioModificacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdEstado")
                        .HasName("PK_Estados_IdEstado");

                    b.HasIndex("IdUsuarioCreacion");

                    b.HasIndex("IdUsuarioModificacion");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Lote", b =>
                {
                    b.Property<int>("IdLote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLote"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("CantidadInicial")
                        .HasColumnType("int");

                    b.Property<decimal>("CostoUnidad")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateOnly>("FechaVencimiento")
                        .HasColumnType("date");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioModificacion")
                        .HasColumnType("int");

                    b.Property<int>("Inventario")
                        .HasColumnType("int");

                    b.HasKey("IdLote")
                        .HasName("PK_Lotes_IdLote");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdUsuarioCreacion");

                    b.HasIndex("IdUsuarioModificacion");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Perfil", b =>
                {
                    b.Property<int>("IdPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerfil"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioModificacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("IdPerfil")
                        .HasName("PK_Perfiles_IdEmpleado");

                    b.HasIndex("IdUsuarioCreacion");

                    b.HasIndex("IdUsuarioModificacion");

                    b.ToTable("Perfiles");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.PerfilesPorPermiso", b =>
                {
                    b.Property<int>("IdPermisoPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermisoPerfil"));

                    b.Property<int>("IdPerfil")
                        .HasColumnType("int");

                    b.Property<int>("IdPermiso")
                        .HasColumnType("int");

                    b.HasKey("IdPermisoPerfil")
                        .HasName("PK_PerfilesPorPermisos_IdPermisoPerfil");

                    b.ToTable("PerfilesPorPermisos");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Permiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermiso"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioModificacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("IdPermiso")
                        .HasName("PK_Permisos_IdPermiso");

                    b.HasIndex("IdUsuarioCreacion");

                    b.HasIndex("IdUsuarioModificacion");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioModificacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdProducto")
                        .HasName("PK_Productos_IdProducto");

                    b.HasIndex("IdUsuarioCreacion");

                    b.HasIndex("IdUsuarioModificacion");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.SalidasInventario", b =>
                {
                    b.Property<int>("IdSalidaInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSalidaInventario"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaRecibido")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioModificacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioRecibe")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdSalidaInventario")
                        .HasName("PK_SalidasInventario_IdSalidaInventario");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdSucursal");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("IdUsuarioCreacion");

                    b.HasIndex("IdUsuarioModificacion");

                    b.HasIndex("IdUsuarioRecibe");

                    b.ToTable("SalidasInventario", (string)null);
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.SalidasInventarioDetalle", b =>
                {
                    b.Property<int>("IdSalidaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSalidaDetalle"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("CantidadProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdLote")
                        .HasColumnType("int");

                    b.Property<int>("IdSalidaInventario")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioCreacionNavigationIdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioModificacionNavigationIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdSalidaDetalle")
                        .HasName("PK_SalidasInventarioDetalles_IdSalidaDetalle");

                    b.HasIndex("IdLote");

                    b.HasIndex("IdSalidaInventario");

                    b.HasIndex("IdUsuarioCreacionNavigationIdUsuario");

                    b.HasIndex("IdUsuarioModificacionNavigationIdUsuario");

                    b.ToTable("SalidasInventarioDetalles");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Sucursal", b =>
                {
                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSucursal"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioModificacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("IdSucursal")
                        .HasName("PK_Sucursales_IdSucursal");

                    b.HasIndex("IdUsuarioCreacion");

                    b.HasIndex("IdUsuarioModificacion");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int?>("IdPerfil")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioModificacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("IdUsuario")
                        .HasName("PK_Usuarios_IdUsuario");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdPerfil");

                    b.HasIndex("IdUsuarioCreacion");

                    b.HasIndex("IdUsuarioModificacion");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Empleado", b =>
                {
                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioCreacionNavigation")
                        .WithMany("EmpleadoIdUsuarioCreacionNavigations")
                        .HasForeignKey("IdUsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Empleados_Usuarios_IdUsuarioCreacion_IdUsuario");

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioModificacionNavigation")
                        .WithMany("EmpleadoIdUsuarioModificacionNavigations")
                        .HasForeignKey("IdUsuarioModificacion")
                        .HasConstraintName("FK_Empleados_Usuarios_IdUsuarioModificacion_IdUsuario");

                    b.Navigation("IdUsuarioCreacionNavigation");

                    b.Navigation("IdUsuarioModificacionNavigation");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Estado", b =>
                {
                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioCreacionNavigation")
                        .WithMany("EstadoIdUsuarioCreacionNavigations")
                        .HasForeignKey("IdUsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Estados_IdUsuarioCreacion_IdUsuario");

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioModificacionNavigation")
                        .WithMany("EstadoIdUsuarioModificacionNavigations")
                        .HasForeignKey("IdUsuarioModificacion")
                        .HasConstraintName("FK_Estados_IdUsuarioModificacion_IdUsuario");

                    b.Navigation("IdUsuarioCreacionNavigation");

                    b.Navigation("IdUsuarioModificacionNavigation");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Lote", b =>
                {
                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Producto", "IdProductoNavigation")
                        .WithMany("Lotes")
                        .HasForeignKey("IdProducto")
                        .IsRequired();

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioCreacionNavigation")
                        .WithMany("LoteIdUsuarioCreacionNavigations")
                        .HasForeignKey("IdUsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Lotes_IdUsuarioCreacion_IdUsuario");

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioModificacionNavigation")
                        .WithMany("LoteIdUsuarioModificacionNavigations")
                        .HasForeignKey("IdUsuarioModificacion")
                        .HasConstraintName("FK_Lotes_IdUsuarioModificacion_IdUsuario");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdUsuarioCreacionNavigation");

                    b.Navigation("IdUsuarioModificacionNavigation");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Perfil", b =>
                {
                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioCreacionNavigation")
                        .WithMany("PerfileIdUsuarioCreacionNavigations")
                        .HasForeignKey("IdUsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Perfiles_Usuarios_IdUsuarioCreacion_IdUsuario");

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioModificacionNavigation")
                        .WithMany("PerfileIdUsuarioModificacionNavigations")
                        .HasForeignKey("IdUsuarioModificacion")
                        .HasConstraintName("FK_Perfiles_Usuarios_IdUsuarioModificacion_IdUsuario");

                    b.Navigation("IdUsuarioCreacionNavigation");

                    b.Navigation("IdUsuarioModificacionNavigation");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Permiso", b =>
                {
                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioCreacionNavigation")
                        .WithMany("PermisoIdUsuarioCreacionNavigations")
                        .HasForeignKey("IdUsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Permisos_Usuarios_IdUsuarioCreacion_IdUsuario");

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioModificacionNavigation")
                        .WithMany("PermisoIdUsuarioModificacionNavigations")
                        .HasForeignKey("IdUsuarioModificacion")
                        .HasConstraintName("FK_Permisos_Usuarios_IdUsuarioModificacion_IdUsuario");

                    b.Navigation("IdUsuarioCreacionNavigation");

                    b.Navigation("IdUsuarioModificacionNavigation");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Producto", b =>
                {
                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioCreacionNavigation")
                        .WithMany("ProductoIdUsuarioCreacionNavigations")
                        .HasForeignKey("IdUsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Productos_IdUsuarioCreacion_IdUsuario");

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioModificacionNavigation")
                        .WithMany("ProductoIdUsuarioModificacionNavigations")
                        .HasForeignKey("IdUsuarioModificacion")
                        .HasConstraintName("FK_Productos_IdUsuarioModificacion_IdUsuario");

                    b.Navigation("IdUsuarioCreacionNavigation");

                    b.Navigation("IdUsuarioModificacionNavigation");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.SalidasInventario", b =>
                {
                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Estado", "IdEstadoNavigation")
                        .WithMany("SalidasInventarios")
                        .HasForeignKey("IdEstado")
                        .IsRequired();

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Sucursal", "IdSucursalNavigation")
                        .WithMany("SalidasInventarios")
                        .HasForeignKey("IdSucursal")
                        .IsRequired();

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioNavigation")
                        .WithMany("SalidasInventarioIdUsuarioNavigations")
                        .HasForeignKey("IdUsuario")
                        .IsRequired();

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioCreacionNavigation")
                        .WithMany("SalidasInventarioIdUsuarioCreacionNavigations")
                        .HasForeignKey("IdUsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_SalidasInventario_IdUsuarioCreacion_IdUsuario");

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioModificacionNavigation")
                        .WithMany("SalidasInventarioIdUsuarioModificacionNavigations")
                        .HasForeignKey("IdUsuarioModificacion")
                        .HasConstraintName("FK_SalidasInventario_IdUsuarioModificacion_IdUsuario");

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioRecibeNavigation")
                        .WithMany("SalidasInventarioIdUsuarioRecibeNavigations")
                        .HasForeignKey("IdUsuarioRecibe");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdSucursalNavigation");

                    b.Navigation("IdUsuarioCreacionNavigation");

                    b.Navigation("IdUsuarioModificacionNavigation");

                    b.Navigation("IdUsuarioNavigation");

                    b.Navigation("IdUsuarioRecibeNavigation");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.SalidasInventarioDetalle", b =>
                {
                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Lote", "IdLoteNavigation")
                        .WithMany("SalidasInventarioDetalles")
                        .HasForeignKey("IdLote")
                        .IsRequired();

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.SalidasInventario", "IdSalidaInventarioNavigation")
                        .WithMany("SalidasInventarioDetalles")
                        .HasForeignKey("IdSalidaInventario")
                        .IsRequired();

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioCreacionNavigation")
                        .WithMany()
                        .HasForeignKey("IdUsuarioCreacionNavigationIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioModificacionNavigation")
                        .WithMany()
                        .HasForeignKey("IdUsuarioModificacionNavigationIdUsuario");

                    b.Navigation("IdLoteNavigation");

                    b.Navigation("IdSalidaInventarioNavigation");

                    b.Navigation("IdUsuarioCreacionNavigation");

                    b.Navigation("IdUsuarioModificacionNavigation");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Sucursal", b =>
                {
                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioCreacionNavigation")
                        .WithMany("SucursaleIdUsuarioCreacionNavigations")
                        .HasForeignKey("IdUsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Sucursales_IdUsuarioCreacion_IdUsuario");

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioModificacionNavigation")
                        .WithMany("SucursaleIdUsuarioModificacionNavigations")
                        .HasForeignKey("IdUsuarioModificacion")
                        .HasConstraintName("FK_Sucursales_IdUsuarioModificacion_IdUsuario");

                    b.Navigation("IdUsuarioCreacionNavigation");

                    b.Navigation("IdUsuarioModificacionNavigation");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", b =>
                {
                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Empleado", "IdEmpleadoNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEmpleado");

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Perfil", "IdPerfilNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdPerfil")
                        .HasConstraintName("FK_Usuarios_Perfil_IdPerfil");

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioCreacionNavigation")
                        .WithMany("InverseIdUsuarioCreacionNavigation")
                        .HasForeignKey("IdUsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Usuarios_IdUsuarioCreacion_IdUsuario");

                    b.HasOne("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", "IdUsuarioModificacionNavigation")
                        .WithMany("InverseIdUsuarioModificacionNavigation")
                        .HasForeignKey("IdUsuarioModificacion")
                        .HasConstraintName("FK_Usuarios_IdUsuarioModificacion_IdUsuario");

                    b.Navigation("IdEmpleadoNavigation");

                    b.Navigation("IdPerfilNavigation");

                    b.Navigation("IdUsuarioCreacionNavigation");

                    b.Navigation("IdUsuarioModificacionNavigation");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Empleado", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Estado", b =>
                {
                    b.Navigation("SalidasInventarios");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Lote", b =>
                {
                    b.Navigation("SalidasInventarioDetalles");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Perfil", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Producto", b =>
                {
                    b.Navigation("Lotes");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.SalidasInventario", b =>
                {
                    b.Navigation("SalidasInventarioDetalles");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Sucursal", b =>
                {
                    b.Navigation("SalidasInventarios");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.Inventario.Infrastructure.Inventario_AJM.Entities.Usuario", b =>
                {
                    b.Navigation("EmpleadoIdUsuarioCreacionNavigations");

                    b.Navigation("EmpleadoIdUsuarioModificacionNavigations");

                    b.Navigation("EstadoIdUsuarioCreacionNavigations");

                    b.Navigation("EstadoIdUsuarioModificacionNavigations");

                    b.Navigation("InverseIdUsuarioCreacionNavigation");

                    b.Navigation("InverseIdUsuarioModificacionNavigation");

                    b.Navigation("LoteIdUsuarioCreacionNavigations");

                    b.Navigation("LoteIdUsuarioModificacionNavigations");

                    b.Navigation("PerfileIdUsuarioCreacionNavigations");

                    b.Navigation("PerfileIdUsuarioModificacionNavigations");

                    b.Navigation("PermisoIdUsuarioCreacionNavigations");

                    b.Navigation("PermisoIdUsuarioModificacionNavigations");

                    b.Navigation("ProductoIdUsuarioCreacionNavigations");

                    b.Navigation("ProductoIdUsuarioModificacionNavigations");

                    b.Navigation("SalidasInventarioIdUsuarioCreacionNavigations");

                    b.Navigation("SalidasInventarioIdUsuarioModificacionNavigations");

                    b.Navigation("SalidasInventarioIdUsuarioNavigations");

                    b.Navigation("SalidasInventarioIdUsuarioRecibeNavigations");

                    b.Navigation("SucursaleIdUsuarioCreacionNavigations");

                    b.Navigation("SucursaleIdUsuarioModificacionNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
